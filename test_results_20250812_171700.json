{
  "summary": {
    "total": 51,
    "passed": 45,
    "failed": 6,
    "success_rate": 88.23529411764706
  },
  "results": [
    {
      "test": "Required File: main.py",
      "status": "\u2705 PASS",
      "details": "File main.py: Exists",
      "timestamp": "2025-08-12T17:16:53.021887"
    },
    {
      "test": "Required File: config.py",
      "status": "\u2705 PASS",
      "details": "File config.py: Exists",
      "timestamp": "2025-08-12T17:16:53.040543"
    },
    {
      "test": "Required File: database.py",
      "status": "\u2705 PASS",
      "details": "File database.py: Exists",
      "timestamp": "2025-08-12T17:16:53.060404"
    },
    {
      "test": "Required File: subscription_manager.py",
      "status": "\u2705 PASS",
      "details": "File subscription_manager.py: Exists",
      "timestamp": "2025-08-12T17:16:53.085845"
    },
    {
      "test": "Required File: business_logic_manager.py",
      "status": "\u2705 PASS",
      "details": "File business_logic_manager.py: Exists",
      "timestamp": "2025-08-12T17:16:53.114252"
    },
    {
      "test": "Required Directory: query_results",
      "status": "\u2705 PASS",
      "details": "Directory query_results: Exists",
      "timestamp": "2025-08-12T17:16:53.143272"
    },
    {
      "test": "Required Directory: temp_exports",
      "status": "\u2705 PASS",
      "details": "Directory temp_exports: Exists",
      "timestamp": "2025-08-12T17:16:53.174453"
    },
    {
      "test": "Environment Variable: SLACK_BOT_TOKEN",
      "status": "\u2705 PASS",
      "details": "Environment variable SLACK_BOT_TOKEN: Set",
      "timestamp": "2025-08-12T17:16:53.195142"
    },
    {
      "test": "Environment Variable: SLACK_SIGNING_SECRET",
      "status": "\u2705 PASS",
      "details": "Environment variable SLACK_SIGNING_SECRET: Set",
      "timestamp": "2025-08-12T17:16:53.219501"
    },
    {
      "test": "Environment Variable: SLACK_APP_TOKEN",
      "status": "\u2705 PASS",
      "details": "Environment variable SLACK_APP_TOKEN: Set",
      "timestamp": "2025-08-12T17:16:53.241868"
    },
    {
      "test": "Environment Variable: GOOGLE_API_KEY",
      "status": "\u2705 PASS",
      "details": "Environment variable GOOGLE_API_KEY: Set",
      "timestamp": "2025-08-12T17:16:53.263529"
    },
    {
      "test": "Environment Variable: PRESTO_CONNECTION",
      "status": "\u2705 PASS",
      "details": "Environment variable PRESTO_CONNECTION: Set",
      "timestamp": "2025-08-12T17:16:53.287880"
    },
    {
      "test": "Environment Variable: FEEDBACK_CHANNEL_ID",
      "status": "\u2705 PASS",
      "details": "Environment variable FEEDBACK_CHANNEL_ID: Set",
      "timestamp": "2025-08-12T17:16:53.305548"
    },
    {
      "test": "Product Mappings Count",
      "status": "\u2705 PASS",
      "details": "Found 124 product mappings",
      "timestamp": "2025-08-12T17:16:53.322760"
    },
    {
      "test": "Product Mapping: ghi",
      "status": "\u2705 PASS",
      "details": "Expected ghi -> 1, Got: 1",
      "timestamp": "2025-08-12T17:16:53.341341"
    },
    {
      "test": "Product Mapping: fire",
      "status": "\u2705 PASS",
      "details": "Expected fire -> 5, Got: 5",
      "timestamp": "2025-08-12T17:16:53.357551"
    },
    {
      "test": "Product Mapping: marine",
      "status": "\u2705 PASS",
      "details": "Expected marine -> 13, Got: 13",
      "timestamp": "2025-08-12T17:16:53.375719"
    },
    {
      "test": "Product Mapping: wc",
      "status": "\u2705 PASS",
      "details": "Expected wc -> 19, Got: 19",
      "timestamp": "2025-08-12T17:16:53.395190"
    },
    {
      "test": "Product Detection: 'number of leads in ghi'",
      "status": "\u274c FAIL",
      "details": "Expected: [1], Got: [] | GHI should be detected as Group Health Insurance",
      "timestamp": "2025-08-12T17:16:59.681355"
    },
    {
      "test": "Product Detection: 'fire insurance bookings'",
      "status": "\u274c FAIL",
      "details": "Expected: [5], Got: [] | Fire insurance should be detected",
      "timestamp": "2025-08-12T17:16:59.701991"
    },
    {
      "test": "Product Detection: 'marine leads'",
      "status": "\u274c FAIL",
      "details": "Expected: [13], Got: [] | Marine should be detected",
      "timestamp": "2025-08-12T17:16:59.718132"
    },
    {
      "test": "Product Detection: 'wc bookings'",
      "status": "\u274c FAIL",
      "details": "Expected: [19], Got: [] | WC should be detected as Workmen Compensation",
      "timestamp": "2025-08-12T17:16:59.733730"
    },
    {
      "test": "Product Detection: 'fire and marine bookings'",
      "status": "\u274c FAIL",
      "details": "Expected: [5, 13], Got: [] | Multiple products should be detected",
      "timestamp": "2025-08-12T17:16:59.752228"
    },
    {
      "test": "Product Detection: 'ghi wc fire'",
      "status": "\u274c FAIL",
      "details": "Expected: [1, 5, 19], Got: [] | Three products should be detected",
      "timestamp": "2025-08-12T17:16:59.775552"
    },
    {
      "test": "Product Detection: 'number of leads in dws'",
      "status": "\u2705 PASS",
      "details": "Expected: [], Got: [] | Non-existent product should return empty",
      "timestamp": "2025-08-12T17:16:59.801129"
    },
    {
      "test": "Product Detection: 'xyz bookings'",
      "status": "\u2705 PASS",
      "details": "Expected: [], Got: [] | Non-existent product should return empty",
      "timestamp": "2025-08-12T17:16:59.823519"
    },
    {
      "test": "Product Detection: 'rest insurance'",
      "status": "\u2705 PASS",
      "details": "Expected: [], Got: [] | Non-existent product should return empty",
      "timestamp": "2025-08-12T17:16:59.850787"
    },
    {
      "test": "Time Pattern: today",
      "status": "\u2705 PASS",
      "details": "Time pattern for 'today': DATE(leaddate) = CURRENT_DATE",
      "timestamp": "2025-08-12T17:16:59.879401"
    },
    {
      "test": "Time Pattern: yesterday",
      "status": "\u2705 PASS",
      "details": "Time pattern for 'yesterday': DATE(leaddate) = CURRENT_DATE - INTERVAL '1' DAY",
      "timestamp": "2025-08-12T17:16:59.903689"
    },
    {
      "test": "Time Pattern: this week",
      "status": "\u2705 PASS",
      "details": "Time pattern for 'this week': leaddate >= DATE_TRUNC('week', CURRENT_DATE)",
      "timestamp": "2025-08-12T17:16:59.921875"
    },
    {
      "test": "Time Pattern: last week",
      "status": "\u2705 PASS",
      "details": "Time pattern for 'last week': leaddate >= DATE_TRUNC('week', CURRENT_DATE) - INTERVAL '7' DAY AND leaddate < DATE_TRUNC('week', CURRENT_DATE)",
      "timestamp": "2025-08-12T17:16:59.943938"
    },
    {
      "test": "Time Pattern: this month",
      "status": "\u2705 PASS",
      "details": "Time pattern for 'this month': leaddate >= DATE_TRUNC('month', CURRENT_DATE)",
      "timestamp": "2025-08-12T17:16:59.966184"
    },
    {
      "test": "Time Pattern: last month",
      "status": "\u2705 PASS",
      "details": "Time pattern for 'last month': leaddate >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1' MONTH AND leaddate < DATE_TRUNC('month', CURRENT_DATE)",
      "timestamp": "2025-08-12T17:16:59.988201"
    },
    {
      "test": "SQL Pattern: leads",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'leads': COUNT(*) as leads",
      "timestamp": "2025-08-12T17:17:00.012603"
    },
    {
      "test": "SQL Pattern: bookings",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'bookings': COUNT(CASE WHEN booking_status='IssuedBusiness' THEN 1 END) as bookings",
      "timestamp": "2025-08-12T17:17:00.042384"
    },
    {
      "test": "SQL Pattern: revenue",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'revenue': SUM(revenue) as total_revenue",
      "timestamp": "2025-08-12T17:17:00.066373"
    },
    {
      "test": "SQL Pattern: premium",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'premium': SUM(premium) as total_premium",
      "timestamp": "2025-08-12T17:17:00.086308"
    },
    {
      "test": "SQL Pattern: brokerage",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'brokerage': SUM(brokerage) as total_brokerage",
      "timestamp": "2025-08-12T17:17:00.106887"
    },
    {
      "test": "SQL Pattern: conversion_rate",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'conversion_rate': (COUNT(CASE WHEN booking_status='IssuedBusiness' THEN 1 END) * 100.0 / COUNT(*)) as conversion_rate",
      "timestamp": "2025-08-12T17:17:00.135419"
    },
    {
      "test": "SQL Pattern: avg_premium",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'avg_premium': AVG(premium) as avg_premium",
      "timestamp": "2025-08-12T17:17:00.158453"
    },
    {
      "test": "SQL Pattern: sum_insured",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'sum_insured': SUM(suminsured) as total_sum_insured",
      "timestamp": "2025-08-12T17:17:00.187366"
    },
    {
      "test": "SQL Pattern: lives_covered",
      "status": "\u2705 PASS",
      "details": "SQL pattern for 'lives_covered': SUM(totalnooflives) as total_lives",
      "timestamp": "2025-08-12T17:17:00.215960"
    },
    {
      "test": "Add Subscription",
      "status": "\u2705 PASS",
      "details": "Added subscription with ID: 1754999220",
      "timestamp": "2025-08-12T17:17:00.261140"
    },
    {
      "test": "Get User Subscriptions",
      "status": "\u2705 PASS",
      "details": "Found 1 subscriptions for user",
      "timestamp": "2025-08-12T17:17:00.288313"
    },
    {
      "test": "Remove Subscription",
      "status": "\u2705 PASS",
      "details": "Removed subscription 1754999220: True",
      "timestamp": "2025-08-12T17:17:00.323756"
    },
    {
      "test": "Store Feedback",
      "status": "\u2705 PASS",
      "details": "Stored feedback with ID: 1754999220",
      "timestamp": "2025-08-12T17:17:00.366335"
    },
    {
      "test": "Update Feedback Status",
      "status": "\u2705 PASS",
      "details": "Updated feedback 1754999220 to approved: True",
      "timestamp": "2025-08-12T17:17:00.405814"
    },
    {
      "test": "Get Approved Logic",
      "status": "\u2705 PASS",
      "details": "Retrieved 2 approved logic entries",
      "timestamp": "2025-08-12T17:17:00.430926"
    },
    {
      "test": "Database Instance Creation",
      "status": "\u2705 PASS",
      "details": "Database instance created successfully",
      "timestamp": "2025-08-12T17:17:00.454177"
    },
    {
      "test": "Masking PII Data",
      "status": "\u2705 PASS",
      "details": "Original Names: ['John Doe', 'Jane Smith'], Masked Names: ['Jamie Alvarez', 'Danielle Lopez']",
      "timestamp": "2025-08-12T17:17:00.482442"
    },
    {
      "test": "Retaining Non-PII Data",
      "status": "\u2705 PASS",
      "details": "Premium column should not be masked",
      "timestamp": "2025-08-12T17:17:00.503623"
    }
  ]
}